# This is a basic workflow to help you get started with Actions

name: Sealos Install By Action

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
    paths:
      - "**sealos-install-action.yml"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  sealos:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Trace memory
        run: |
          env
          cd /home/runner/work/_actions/labring/sealos-action/ && tree -L 5
          free -m

      - name: Auto install sealos
        uses: labring/sealos-action@v0.0.4
        with:
          type: install-dev
          sealosGit: https://github.com/cuisongliu/sealos.git
          sealosGitBranch: main
          goAddr: https://go.dev/dl/go1.20.linux-amd64.tar.gz
          pruneCRI: false

      - name: Install sealos version
        run: |
          sudo sealos version --debug || true
          sudo sealctl version 
          sudo buildah version

      - name: Login sealos
        run: |
          sudo sealos login -u ${{ github.repository_owner }} -p ${{ secrets.GH_TOKEN }} --debug ghcr.io

      - name: Build sealos image by dockerfile
        working-directory: test/build-dockerfile
        run: |
          sudo sealos build -t testactionimage:dockerfile -f Dockerfile .

      - name: Build sealos image by kubefile
        working-directory: test/build-kubefile
        run: |
          sudo sealos build -t testactionimage:kubefile -f Kubefile .
      - name: Auto install k8s using sealos
        run: |
          sudo sealos run  labring/kubernetes:v1.24.0 --single

      - name: Run images
        run: |
          sudo sealos images

      - name: check
        run: |
          sleep 60
          sudo -u root crictl ps -a
          sudo -u root cat /etc/hosts
          sudo -u root systemctl status kubelet
          sudo -u root kubectl get nodes --kubeconfig /etc/kubernetes/admin.conf
          NODENAME=$(sudo -u root kubectl get nodes -ojsonpath='{.items[0].metadata.name}' --kubeconfig /etc/kubernetes/admin.conf )
          NODEIP=$(sudo -u root kubectl get nodes -ojsonpath='{.items[0].status.addresses[0].address}' --kubeconfig /etc/kubernetes/admin.conf )
          echo "NodeName=$NODENAME,NodeIP=$NODEIP"
          sudo -u root kubectl get nodes --kubeconfig /etc/kubernetes/admin.conf
          sudo -u root kubectl get pods -A --kubeconfig /etc/kubernetes/admin.conf

      - name: Trace memory
        run: free -m
